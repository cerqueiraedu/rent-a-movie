{
	"id": "5fe9aaa9-5a02-4f00-99b4-603bfa569d30",
	"name": "End to End Tests",
	"allTests": [],
	"timestamp": "2019-06-26T18:20:40.764Z",
	"collection_id": "fece6464-ee7c-4533-8754-c528592c4df9",
	"folder_id": 0,
	"target_type": "collection",
	"environment_id": "c7b6f144-6ebc-4f58-9eca-e81123133147",
	"data": [],
	"delay": 0,
	"count": 1,
	"collection": {
		"id": "fece6464-ee7c-4533-8754-c528592c4df9",
		"name": "End to End Tests",
		"description": "",
		"auth": null,
		"events": null,
		"variables": [],
		"order": [],
		"folders_order": [
			"582b8df4-f8a3-4934-91f1-ac6a0a86f38c",
			"2fdb3388-c109-4be2-832e-f4d86d7ec247",
			"1fe57441-ed1f-4f53-9e8e-d1bcdc6588cf"
		],
		"owner": "6974813",
		"favorite": false
	},
	"folder": null,
	"environment": null,
	"globals": [
		{
			"key": "userEmail",
			"value": "eduardo.cerqueira@no-mail.com",
			"enabled": true
		},
		{
			"key": "userPassword",
			"value": "shallpass",
			"enabled": true
		},
		{
			"key": "accessToken",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImVkdWFyZG8uY2VycXVlaXJhQG5vLW1haWwuY29tIiwiaWF0IjoxNTYxNDA2OTQ0LCJleHAiOjE1NjE0MTA1NDQsInN1YiI6IjEifQ.sXUAy1eoD4Q1Qldd1qrwl4BvOiNcOHuyAeB4g9iCx-Y",
			"enabled": true
		}
	],
	"results": [
		{
			"name": "Get Customers",
			"id": "073fd1a0-0223-4266-8b4e-cf26ca02d406",
			"url": "http://localhost:3000/customers",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status Code is 401": true
			},
			"testPassFailCounts": {
				"Status Code is 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"6"
			],
			"allTests": [
				{
					"Status Code is 401": true
				}
			],
			"time": "6",
			"totalRequestTime": "6",
			"iterationResults": {}
		},
		{
			"name": "Get Rentals",
			"id": "1c4d4690-b989-4514-8421-8c34988031cf",
			"url": "http://localhost:3000/rentals",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status Code is 401": true
			},
			"testPassFailCounts": {
				"Status Code is 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"4"
			],
			"allTests": [
				{
					"Status Code is 401": true
				}
			],
			"time": "4",
			"totalRequestTime": "4",
			"iterationResults": {}
		},
		{
			"name": "Insert User Credential",
			"id": "7792de2a-162e-42dc-8b66-b865d5b67678",
			"url": "http://localhost:3000/register",
			"totalTime": 0,
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": {
					"name": "Created",
					"detail": "The request has been fulfilled and resulted in a new resource being created."
				}
			},
			"tests": {
				"Status Code is 201": true,
				"Contains a valid Access Token": true
			},
			"testPassFailCounts": {
				"Status Code is 201": {
					"pass": 1,
					"fail": 0
				},
				"Contains a valid Access Token": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"109"
			],
			"allTests": [
				{
					"Status Code is 201": true,
					"Contains a valid Access Token": true
				}
			],
			"time": "109",
			"totalRequestTime": "109",
			"iterationResults": {}
		},
		{
			"name": "Get Customers",
			"id": "44c6a578-d728-4683-8fff-036512ceae1d",
			"url": "http://localhost:3000/customers",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status Code is 200": true
			},
			"testPassFailCounts": {
				"Status Code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"7"
			],
			"allTests": [
				{
					"Status Code is 200": true
				}
			],
			"time": "7",
			"totalRequestTime": "7",
			"iterationResults": {}
		},
		{
			"name": "Delete User Credential",
			"id": "5903f1af-9999-4cc8-8816-8be3fca10307",
			"url": "http://localhost:3000/users/1",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status Code is 200": true
			},
			"testPassFailCounts": {
				"Status Code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"11"
			],
			"allTests": [
				{
					"Status Code is 200": true
				}
			],
			"time": "11",
			"totalRequestTime": "11",
			"iterationResults": {}
		}
	],
	"totalPass": 6,
	"totalFail": 0,
	"totalTime": 137,
	"lifecycle": "done",
	"requests": [
		{
			"name": "Get Customers",
			"id": "073fd1a0-0223-4266-8b4e-cf26ca02d406",
			"url": "http://localhost:3000/customers",
			"time": "2019-06-26T18:20:40.764Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status Code is 401": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get Rentals",
			"id": "1c4d4690-b989-4514-8421-8c34988031cf",
			"url": "http://localhost:3000/rentals",
			"time": "2019-06-26T18:20:40.764Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status Code is 401": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Insert User Credential",
			"id": "7792de2a-162e-42dc-8b66-b865d5b67678",
			"url": "http://localhost:3000/register",
			"time": "2019-06-26T18:20:40.764Z",
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": {
					"name": "Created",
					"detail": "The request has been fulfilled and resulted in a new resource being created."
				}
			},
			"testPassFailCounts": {
				"Status Code is 201": {
					"pass": 1,
					"fail": 0
				},
				"Contains a valid Access Token": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get Customers",
			"id": "44c6a578-d728-4683-8fff-036512ceae1d",
			"url": "http://localhost:3000/customers",
			"time": "2019-06-26T18:20:40.764Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status Code is 200": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Delete User Credential",
			"id": "5903f1af-9999-4cc8-8816-8be3fca10307",
			"url": "http://localhost:3000/users/1",
			"time": "2019-06-26T18:20:40.764Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status Code is 200": {
					"pass": 1,
					"fail": 0
				}
			}
		}
	],
	"synced": false
}